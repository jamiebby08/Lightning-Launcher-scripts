/*
takes in jsonvar that has a varprefix property, uses "json" as the prefix if none is set
creates local Tasker variables out of each property in the json prefixed by varprefix

EXAMPLE:
set jsonvar in Tasker to {"varprefix": "test", "prop1": "Property1", "prop2": "Property2"}
After running this script, you will get local variables %test_prop1 set to "Property1" and %test_prop2 set to "Property2"

For example, to extract the value of the 'formatted_address' keys within a JSON result object, simply access them using the following code:

for (i = 0; i < myJSONResult.results.length; i++) {
  myAddress[i] = myJSONResult.results[i].formatted_address;
}

Note that because JSON may contain multiple values, it's wisest to iterate over the length of theresults array if you want to capture all possible values. In practice, you may wish to only return the first result (results[0]), however.

parse = object (string to object) 
stringify = string (object to string) 
*/

var j = JSON.parse(jsonvar);

if (!j.varprefix) {
  j.varprefix = "json_";
}

for (var key in j) {
  var varName = j.varprefix + key;
  if (j[key].constructor === Array) {
    for (var i = 0; i < j[key].length; i++) {
      setLocal(varName + (i+1), JSON.stringify(j[key][i]));
    }
  } else if (key !== "varprefix") {
    setLocal(varName, JSON.stringify(j[key]));
  }
}